// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Task {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String?
  dueDate     DateTime? @map("due_date")
  priority    String    @default("medium")
  completed   Boolean   @default(false)
  important   Boolean   @default(false)
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz
  userId      String?   @map("user_id") @db.Uuid

  // リレーション
  taskTags TaskTag[]

  @@index([userId])
  @@index([completed])
  @@index([important])
  @@index([dueDate])
  @@map("tasks")
}

model Tag {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  color     String
  textColor String   @map("text_color")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz
  userId    String?  @map("user_id") @db.Uuid

  // リレーション
  taskTags TaskTag[]

  @@index([userId])
  @@map("tags")
}

model TaskTag {
  taskId String @map("task_id") @db.Uuid
  tagId  String @map("tag_id") @db.Uuid

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([taskId, tagId])
  @@index([taskId])
  @@index([tagId])
  @@map("task_tags")
}
